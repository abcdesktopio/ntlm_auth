name: ci-multiarch

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: 0 0 * * 0

env:
  REGISTRY_IMAGE: abcdesktopio/ntlm_auth
 
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # only platform to build, not the image target 
        platform-runs: [ ubuntu-latest, ubuntu-24.04-arm ]
        # this is the target build 
        # ntlm_auth 
        distribs: [ debian_bookworm, debian_trixie, ubuntu_24.04, alpine_latest, alpine_3.22 ]
    runs-on: ${{ matrix.platform-runs }} 
    steps:
      - name: Prepare
        id: prepare
        run : |
          # this instance is running on ubuntu-latest or ubuntu-24.04-arm
          # dump values for debug 
          echo matrix.platform-run on ${{ matrix.platform-runs }}
          echo matrix.distribs= ${{ matrix.distribs }}
          # parse distribs debian_bookworm -> DISTRIB=debian and RELEASE=bookworm
          # parse distribs ubuntu_24.04 -> DISTRIB=ubuntu and RELEASE=24.04
          echo ${{ matrix.distribs }} | awk -F "_" '{print "DISTRIB="$1}' >> ${GITHUB_ENV}
          echo ${{ matrix.distribs }} | awk -F "_" '{print "RELEASE="$2}' >> ${GITHUB_ENV}
          # read uname --machine to know the type of cpu amd64 or arm64
          # create env OS_PLATFORM=linux/amd64 and PLATFORM=amd64
          # create env OS_PLATFORM=linux/arm64 and PLATFORM=arm64
          MACHINE=$(uname --machine)
          echo $MACHINE
          if [ $MACHINE = 'x86_64' ]; then 
             echo 'OS_PLATFORM=linux/amd64' >> ${GITHUB_ENV}
             echo 'PLATFORM=amd64' >> ${GITHUB_ENV}
          fi
          if [ $MACHINE = 'aarch64' ]; then 
             echo 'OS_PLATFORM=linux/arm64' >> ${GITHUB_ENV}
             echo 'PLATFORM=arm64' >> ${GITHUB_ENV}
          fi
          
      - uses: actions/checkout@v3
           
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          build-args: |
            BASE_IMAGE=${{ env.DISTRIB }}
            TAG=${{ env.RELEASE }}
          file: Dockerfile.${{ env.DISTRIB }}
          provenance: false
          platforms: ${{ env.OS_PLATFORM }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ghcr.io/${{ env.REGISTRY_IMAGE }}_${{ env.DISTRIB }}_${{ env.RELEASE }}:${{ env.PLATFORM }}
          outputs: type=image,name-canonical=true,push=true
          # outputs: type=image,push-by-digest=true,name-canonical=true,push=true

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        distribs: [ debian_bookworm, debian_trixie, ubuntu_24.04, alpine_latest, alpine_3.22 ]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: merge
        uses: int128/docker-manifest-create-action@v2
        with:
          # image format ntlm_auth:$distrib_$release
          # amd64 and arm64
          # ghcr.io/abcdesktopio/ntlm_auth:debian_bookworm
          # ghcr.io/abcdesktopio/ntlm_auth:debian_trixie
          # ghcr.io/abcdesktopio/ntlm_auth:ubuntu_24.04
          # ghcr.io/abcdesktopio/ntlm_auth:alpine_latest
          # ghcr.io/abcdesktopio/ntlm_auth:alpine_3.22
          tags: ghcr.io/${{ env.REGISTRY_IMAGE }}:${{ matrix.distribs }}
          sources: |
            ghcr.io/${{ env.REGISTRY_IMAGE }}_${{ matrix.distribs }}:arm64
            ghcr.io/${{ env.REGISTRY_IMAGE }}_${{ matrix.distribs }}:amd64
